/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dtos.EquipmentDTO;
import dtos.FeedbackDTO;
import dtos.RoomDTO;
import dtos.UserDTO;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.EquipmentDAO;
import model.FeedbackDAO;
import model.RoomDAO;
import model.UserDAO;

/**
 *
 * @author SE140355
 */
public class EmployerJFrame extends javax.swing.JFrame {

    DefaultTableModel tblModelRoom = null;
    DefaultTableModel tblModelEquipment = null;
    DefaultTableModel tblModelFeedback = null;
    DefaultTableModel tblModelUser = null;
    DefaultTableModel tblModelUserJob = null;
    DefaultTableModel tblModelRoomJob = null;
    FeedbackDAO feedbackDao;

    /**
     * Creates new form StudentJFrame
     *
     * @throws java.lang.Exception
     */
    public EmployerJFrame() throws Exception {
        initComponents();
        tblModelRoom = (DefaultTableModel) tblViewRoom.getModel();
        tblModelEquipment = (DefaultTableModel) tblViewEquip.getModel();
        tblModelFeedback = (DefaultTableModel) tblViewFeedback.getModel();
        tblModelUser = (DefaultTableModel) tblViewUser.getModel();
        tblModelUserJob = (DefaultTableModel) tblViewUserJob.getModel();
        tblModelRoomJob = (DefaultTableModel) tblViewRoomJob.getModel();
        feedbackDao = new FeedbackDAO(lblPopup);
        firstController();
        secondController();
        thirdController();
        forthController();
    }

    private void firstController() throws Exception {
        try {
            RoomDAO dao = new RoomDAO();
            List<RoomDTO> listRoom = dao.getAllRoom();
            showRoom(listRoom);

            EquipmentDAO equipDao = new EquipmentDAO();
            List<EquipmentDTO> listEquip = equipDao.getAllEquipAdmin();
            showEquipment(listEquip);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void secondController() throws Exception {
        try {
            FeedbackDAO feedbackDao = new FeedbackDAO();
            List<FeedbackDTO> listFeedback = feedbackDao.getAllFeedbackAdmin();

            Collections.sort(listFeedback);

            tblModelFeedback.setRowCount(0);
            for (FeedbackDTO feedbackDTO : listFeedback) {
                tblModelFeedback.addRow(feedbackDTO.toVectorAdminandTeacher());
            }
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void thirdController() throws Exception {
        try {
            UserDAO dao = new UserDAO();
            List<UserDTO> list = dao.getAllUser();

            Collections.sort(list);
            showUser(list);
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void forthController() throws Exception {
        try {
            UserDAO dao = new UserDAO();
            List<UserDTO> list = dao.getAllUser();

            Collections.sort(list);
            tblModelUserJob.setRowCount(0);
            for (UserDTO userDTO : list) {
                tblModelUserJob.addRow(userDTO.toVector());
            }

            RoomDAO daoRoom = new RoomDAO();
            List<RoomDTO> listRoom = daoRoom.getAllRoom();

            tblModelRoomJob.setRowCount(0);
            for (RoomDTO roomDTO : listRoom) {
                tblModelRoomJob.addRow(roomDTO.toVectorEmployer());
            }
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void showRoom(List<RoomDTO> list) throws Exception {
        tblModelRoom.setRowCount(0);
        for (RoomDTO roomDTO : list) {
            tblModelRoom.addRow(roomDTO.toVector());
        }
    }

    private void showEquipment(List<EquipmentDTO> list) throws Exception {
        tblModelEquipment.setRowCount(0);
        for (EquipmentDTO equipmentDTO : list) {
            tblModelEquipment.addRow(equipmentDTO.toVector());
        }
    }

    private void showUser(List<UserDTO> list) throws Exception {
        tblModelUser.setRowCount(0);
        for (UserDTO userDTO : list) {
            tblModelUser.addRow(userDTO.toVector());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngEquipStatus = new javax.swing.ButtonGroup();
        btngFeedbackStatus = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewRoom = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblViewEquip = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rbtnGood = new javax.swing.JRadioButton();
        rbtnBroken = new javax.swing.JRadioButton();
        txtEquipName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRoom = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnAddEquip = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtEquipId = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtRoomDes = new javax.swing.JTextArea();
        btnAddRoom = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btnShowTeacher = new javax.swing.JButton();
        btnShowStudent = new javax.swing.JButton();
        btnShowEmployer = new javax.swing.JButton();
        btnShowAll = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblViewUser = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtUsernameUser = new javax.swing.JTextField();
        btnAddUser = new javax.swing.JButton();
        btnClearField = new javax.swing.JButton();
        cbxRole = new javax.swing.JComboBox<>();
        btnUpdateUser = new javax.swing.JButton();
        btnDeleteUser = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        txtPasswordUser = new javax.swing.JPasswordField();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtUsernameJob = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtJob = new javax.swing.JTextField();
        txtRoomJob = new javax.swing.JTextField();
        btnAddJob = new javax.swing.JButton();
        btnDeleteJob = new javax.swing.JButton();
        btnRefreshJob = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblViewUserJob = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblViewRoomJob = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        btnSearchByUsername = new javax.swing.JButton();
        btnSearchByRoom = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblViewFeedback = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtReply = new javax.swing.JTextArea();
        btnReply = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtEquipIdFb = new javax.swing.JTextField();
        txtRoomIdfb = new javax.swing.JTextField();
        rbtnAccept = new javax.swing.JRadioButton();
        rbtnDecline = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        txtEquipNameFb = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        txtRoleFb = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtIDFb = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        lblPopup = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employer");
        setResizable(false);

        tblViewRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewRoomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblViewRoom);

        tblViewEquip.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EquipID", "Equipment", "Broken"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewEquip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewEquipMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblViewEquip);

        jLabel1.setText("--->");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 836, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(252, 252, 252))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Equipment Manager", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel2.setText("Equipment:");

        jLabel8.setText("Status:");

        btngEquipStatus.add(rbtnGood);
        rbtnGood.setText("Good");

        btngEquipStatus.add(rbtnBroken);
        rbtnBroken.setText("Broken");

        jLabel3.setText("Room:");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnAddEquip.setText("Add Equipment");
        btnAddEquip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEquipActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Equipment");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel12.setText("Equip ID:");

        jLabel13.setText("Room Description:");

        txtRoomDes.setColumns(20);
        txtRoomDes.setRows(5);
        jScrollPane3.setViewportView(txtRoomDes);

        btnAddRoom.setText("Add Room");
        btnAddRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(btnAddEquip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReset)
                .addGap(98, 98, 98)
                .addComponent(btnDelete)
                .addGap(75, 75, 75))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rbtnGood)
                        .addGap(18, 18, 18)
                        .addComponent(rbtnBroken))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEquipId, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(txtRoom))
                                .addGap(80, 80, 80))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(btnAddRoom)
                                .addGap(53, 53, 53)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnUpdate))))
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                    .addComponent(txtEquipName))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtEquipId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEquipName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(rbtnGood)
                            .addComponent(rbtnBroken))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnReset)
                    .addComponent(btnUpdate)
                    .addComponent(btnAddEquip)
                    .addComponent(btnAddRoom))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Equipment Management", jPanel1);

        btnShowTeacher.setText("Teacher");
        btnShowTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowTeacherActionPerformed(evt);
            }
        });

        btnShowStudent.setText("Student");
        btnShowStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowStudentActionPerformed(evt);
            }
        });

        btnShowEmployer.setText("Employer");
        btnShowEmployer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowEmployerActionPerformed(evt);
            }
        });

        btnShowAll.setText("Show All");
        btnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllActionPerformed(evt);
            }
        });

        tblViewUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Role", "Username"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewUserMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblViewUser);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnShowAll, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(btnShowEmployer)
                        .addGap(46, 46, 46)
                        .addComponent(btnShowStudent)
                        .addGap(43, 43, 43)
                        .addComponent(btnShowTeacher)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnShowAll)
                    .addComponent(btnShowEmployer)
                    .addComponent(btnShowStudent)
                    .addComponent(btnShowTeacher))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User's Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel15.setText("Username:");

        jLabel16.setText("Role:");

        btnAddUser.setText("Add");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnClearField.setText("Clear");
        btnClearField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFieldActionPerformed(evt);
            }
        });

        cbxRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Teacher", "Employer" }));

        btnUpdateUser.setText("Update");
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setText("Delete");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        jLabel19.setText("Password:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbxRole, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsernameUser, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                            .addComponent(txtPasswordUser)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnClearField)
                        .addGap(44, 44, 44)
                        .addComponent(btnAddUser)
                        .addGap(43, 43, 43)
                        .addComponent(btnDeleteUser)
                        .addGap(32, 32, 32)
                        .addComponent(btnUpdateUser)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtUsernameUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(cbxRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(txtPasswordUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClearField)
                    .addComponent(btnAddUser)
                    .addComponent(btnDeleteUser)
                    .addComponent(btnUpdateUser))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("User Management", jPanel6);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N
        jPanel11.setToolTipText("");

        jLabel17.setText("Username:");

        txtUsernameJob.setEditable(false);

        jLabel20.setText("Work:");

        jLabel21.setText("Room:");

        txtJob.setEditable(false);

        btnAddJob.setText("Add");
        btnAddJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddJobActionPerformed(evt);
            }
        });

        btnDeleteJob.setText("Delete");
        btnDeleteJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteJobActionPerformed(evt);
            }
        });

        btnRefreshJob.setText("Refresh");
        btnRefreshJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshJobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUsernameJob)
                    .addComponent(txtJob)
                    .addComponent(txtRoomJob, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE))
                .addGap(115, 115, 115)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRefreshJob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteJob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddJob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtUsernameJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddJob))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteJob))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtRoomJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefreshJob))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tblViewUserJob.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Role", "Username"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewUserJob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewUserJobMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblViewUserJob);

        tblViewRoomJob.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewRoomJob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewRoomJobMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblViewRoomJob);

        jLabel18.setText("<===>");

        btnSearchByUsername.setText("Search By Username");
        btnSearchByUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByUsernameActionPerformed(evt);
            }
        });

        btnSearchByRoom.setText("Search By Room");
        btnSearchByRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByRoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearchByUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearchByRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(btnSearchByUsername)
                        .addGap(41, 41, 41)
                        .addComponent(btnSearchByRoom)
                        .addGap(0, 137, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel18)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Assign Job", jPanel10);

        tblViewFeedback.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Username", "RoomID", "EquipID", "Date", "Accepted"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewFeedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewFeedbackMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblViewFeedback);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Feedback's Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel4.setText("Date:");

        jLabel6.setText("Content:");

        txtDate.setEditable(false);
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        txtContent.setEditable(false);
        txtContent.setColumns(20);
        txtContent.setRows(5);
        jScrollPane5.setViewportView(txtContent);

        jLabel7.setText("Reply:");

        txtReply.setColumns(20);
        txtReply.setRows(5);
        jScrollPane6.setViewportView(txtReply);

        btnReply.setText("Reply");
        btnReply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplyActionPerformed(evt);
            }
        });

        jLabel9.setText("EquipID:");

        jLabel10.setText("Room:");

        jLabel11.setText("Username:");

        txtUsername.setEditable(false);

        txtEquipIdFb.setEditable(false);

        txtRoomIdfb.setEditable(false);

        btngFeedbackStatus.add(rbtnAccept);
        rbtnAccept.setText("Accept");

        btngFeedbackStatus.add(rbtnDecline);
        rbtnDecline.setText("Decline");

        jLabel14.setText("Equipment:");

        txtEquipNameFb.setEditable(false);

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel22.setText("Role: ");

        txtRoleFb.setEditable(false);

        jLabel23.setText("ID:");

        txtIDFb.setEditable(false);

        jLabel24.setText("Status:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane6)
                                            .addComponent(jScrollPane5))
                                        .addGap(19, 19, 19))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btnClear)
                                        .addGap(43, 43, 43)))
                                .addComponent(btnReply)
                                .addGap(21, 21, 21))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEquipIdFb, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRoomIdfb, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIDFb, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(138, 138, 138)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtEquipNameFb, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                    .addComponent(txtUsername)
                                    .addComponent(txtDate))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txtRoleFb, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(rbtnAccept)
                                .addGap(18, 18, 18)
                                .addComponent(rbtnDecline)))
                        .addContainerGap(109, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(txtIDFb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22)
                        .addComponent(txtRoleFb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtnAccept)
                        .addComponent(rbtnDecline)
                        .addComponent(jLabel24)))
                .addGap(7, 7, 7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtEquipIdFb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtEquipNameFb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtRoomIdfb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReply)
                    .addComponent(btnClear))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Notification", jPanel2);

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblPopup, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(31, 31, 31)
                .addComponent(btnExit)
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLogout)
                            .addComponent(btnExit)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPopup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        /*
        yes = 0
        no = 1
        cancel = 2
         */
        int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?");

        if (choice == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:

        int choice = JOptionPane.showConfirmDialog(this, "Do you want to logout?");

        if (choice == 0) {
            this.setVisible(false);
            new LoginJFrame().setVisible(true);
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserActionPerformed
        // TODO add your handling code here:
        String username = txtUsernameUser.getText();
        String role = cbxRole.getItemAt(cbxRole.getSelectedIndex());
        String password = new String(txtPasswordUser.getPassword());

        String valid = "";

        if (username.isBlank()) {
            valid += "Username can't be blank\n";
        }

        if (password.isBlank()) {
            valid += "Password can't be blank\n";
        }

        if (valid.isBlank()) {
            try {
                UserDAO dao = new UserDAO();
                if (dao.updateUser(username, role, password)) {
                    JOptionPane.showMessageDialog(this, "Updated successfully!");

                    thirdController();
                } else {
                    JOptionPane.showMessageDialog(this, "Update failed!");
                }
            } catch (Exception e) {
                
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, valid);
        }
    }//GEN-LAST:event_btnUpdateUserActionPerformed

    private void btnClearFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFieldActionPerformed
        try {
            // TODO add your handling code here:
            txtUsernameUser.setEditable(true);
            txtUsernameUser.setText("");
            cbxRole.setSelectedItem("Student");
            txtPasswordUser.setText("");

            thirdController();
        } catch (Exception ex) {
            Logger.getLogger(EmployerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnClearFieldActionPerformed

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        // TODO add your handling code here:

        String username = txtUsernameUser.getText();
        String role = cbxRole.getItemAt(cbxRole.getSelectedIndex());
        String password = new String(txtPasswordUser.getPassword());

        String valid = "";

        if (username.isBlank()) {
            valid += "Username can't be blank\n";
        }

        if (password.isBlank()) {
            valid += "Password can't be blank\n";
        }

        if (valid.isBlank()) {
            try {
                UserDAO dao = new UserDAO();

                if (dao.addUser(username, role, password)) {
                    JOptionPane.showMessageDialog(this, "Added successfully!");

                    thirdController();
                } else {
                    JOptionPane.showMessageDialog(this, "Add failed!");
                }
            } catch (Exception e) {
                
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

        } else {
            JOptionPane.showMessageDialog(this, valid);
        }

    }//GEN-LAST:event_btnAddUserActionPerformed

    private void tblViewUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewUserMouseClicked
        // TODO add your handling code here:
        try {
            txtUsernameUser.setEditable(false);
            int row = tblViewUser.getSelectedRow();
            String username = (String) tblModelUser.getValueAt(row, 1);

            UserDAO dao = new UserDAO();
            UserDTO dto = dao.searchByUsername(username);

            String role = dto.getRole();

            txtUsernameUser.setText(username);
            cbxRole.setSelectedItem(role);

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_tblViewUserMouseClicked

    private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed
        // TODO add your handling code here:
        try {
            thirdController();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnShowAllActionPerformed

    private void btnShowEmployerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowEmployerActionPerformed
        // TODO add your handling code here:
        try {
            UserDAO dao = new UserDAO();
            List<UserDTO> list = dao.getUserByRole("Employer");
            showUser(list);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnShowEmployerActionPerformed

    private void btnShowStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowStudentActionPerformed
        // TODO add your handling code here:
        try {
            UserDAO dao = new UserDAO();
            List<UserDTO> list = dao.getUserByRole("Student");
            showUser(list);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnShowStudentActionPerformed

    private void btnShowTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowTeacherActionPerformed
        // TODO add your handling code here:
        try {
            UserDAO dao = new UserDAO();
            List<UserDTO> list = dao.getUserByRole("Teacher");
            showUser(list);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnShowTeacherActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        try {
            // TODO add your handling code here:

            txtIDFb.setText("");
            txtRoleFb.setText("");
            txtUsername.setText("");
            txtRoomIdfb.setText("");
            txtEquipIdFb.setText("");
            txtEquipNameFb.setText("");
            txtDate.setText("");
            txtContent.setText("");
            txtReply.setText("");
            btngFeedbackStatus.clearSelection();

            secondController();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnReplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReplyActionPerformed
        // TODO add your handling code here:
        String username = txtUsername.getText();
        String roomId = txtRoomIdfb.getText();
        String equipId = txtEquipIdFb.getText();
        String reply = txtReply.getText();
        String dateString = txtDate.getText();
        String id = txtIDFb.getText();

        String fbStatus;

        if (rbtnDecline.isSelected()) {
            fbStatus = "Declined";
        } else if (rbtnAccept.isSelected()) {
            fbStatus = "Accepted";
        } else {
            fbStatus = "Waiting";
        }

        String valid = "";

        if (id.isBlank()) {
            valid += "ID can't be blank.\n";
        }
        if (username.isBlank()) {
            valid += "Username can't be blank.\n";
        }
        if (roomId.isBlank()) {
            valid += "Room can't be blank.\n";
        }
        if (equipId.isBlank()) {
            valid += "Equipment ID can't be blank.\n";
        }
        if (dateString.isBlank()) {
            valid += "Date can't be blank.\n";
        }
        if (!rbtnAccept.isSelected() && !rbtnDecline.isSelected()) {
            valid += "Feedback status can't be unselected!\n";
        }

        if (valid.isBlank()) {
            try {
                FeedbackDAO dao = new FeedbackDAO();

                if (dao.reply(id, reply, fbStatus)) {
                    JOptionPane.showMessageDialog(this, "Replied successfully!");

                    secondController();
                } else {
                    JOptionPane.showMessageDialog(this, "Reply failed!");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, valid);
        }
    }//GEN-LAST:event_btnReplyActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void tblViewFeedbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewFeedbackMouseClicked
        // TODO add your handling code here:
        try {
            int row = tblViewFeedback.getSelectedRow();
            String id = (String) tblViewFeedback.getValueAt(row, 0);

            FeedbackDAO dao = new FeedbackDAO();
            FeedbackDTO dto = dao.searchByPrimaryKeys(id);

            String equipId = dto.getEquipId();
            String username = dto.getUsername();

            EquipmentDAO eDao = new EquipmentDAO();
            EquipmentDTO eDto = eDao.findByPrimaryKeyAdminAndTeacher(equipId);

            UserDAO uDao = new UserDAO();
            UserDTO uDto = uDao.searchByUsername(username);

            txtIDFb.setText(id);
            txtUsername.setText(username);
            txtRoleFb.setText(uDto.getRole());
            txtDate.setText(dto.getDate().toString());
            txtEquipIdFb.setText(equipId);
            txtEquipNameFb.setText(eDto.getEquipmentName());
            txtRoomIdfb.setText(dto.getRoomId());

            txtContent.setText(dto.getContent());

            txtReply.setText(dto.getReply());

            if (dto.getStatus().equalsIgnoreCase("Accepted")) {
                rbtnAccept.setSelected(true);
                rbtnDecline.setSelected(false);
            } else if (dto.getStatus().equalsIgnoreCase("Declined")) {
                rbtnAccept.setSelected(false);
                rbtnDecline.setSelected(true);
            } else {
                btngFeedbackStatus.clearSelection();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_tblViewFeedbackMouseClicked

    private void btnAddRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRoomActionPerformed
        // TODO add your handling code here:

        String roomId = txtRoom.getText();
        String roomDes = txtRoomDes.getText();
        String valid = "";

        if (roomId.isBlank()) {
            valid += "Room can't be blank.";
        }

        if (valid.isBlank()) {
            try {
                RoomDAO dao = new RoomDAO();
                if (dao.addRoom(roomId, roomDes)) {
                    JOptionPane.showMessageDialog(this, "Added successfully!");
                    showRoom(dao.getAllRoom());
                } else {
                    JOptionPane.showMessageDialog(this, "Add failed!");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, valid);
        }
    }//GEN-LAST:event_btnAddRoomActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String equipId = txtEquipId.getText();
        String roomID = txtRoom.getText();
        String valid = "";

        if (equipId.isBlank()) {
            valid += "Equipment ID can't be blank.";
        }

        if (valid.isBlank()) {
            try {
                EquipmentDAO dao = new EquipmentDAO();
                if (dao.deleleEquip(equipId)) {
                    JOptionPane.showMessageDialog(this, "Deleted successfully!");

                    showEquipment(dao.findByRoomID(roomID));
                } else {
                    JOptionPane.showMessageDialog(this, "Delete failed.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, valid);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddEquipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEquipActionPerformed
        // TODO add your handling code here:
        if (txtEquipId.isEditable()) {

            String equipId = txtEquipId.getText();
            String equipName = txtEquipName.getText();
            String roomId = txtRoom.getText();

            boolean equipStatus = false;

            if (rbtnGood.isSelected()) {
                equipStatus = false;
            } else if (rbtnBroken.isSelected()) {
                equipStatus = true;
            }

            String valid = "";
            if (equipId.isBlank()) {
                valid += "Equipment ID can't be blank!\n";
            }

            if (equipName.isBlank()) {
                valid += "Equipment name can't be blank!\n";
            }

            if (!rbtnBroken.isSelected() && !rbtnGood.isSelected()) {
                valid += "Equipment status can't be unselected!\n";
            }

            if (roomId.isBlank()) {
                valid += "Room can't be blank!\n";
            }

            if (valid.isBlank()) {
                try {
                    EquipmentDAO dao = new EquipmentDAO();
                    if (dao.addEquipment(equipId, equipName, equipStatus, roomId)) {
                        JOptionPane.showMessageDialog(this, "Added successfully");

                        showEquipment(dao.findByRoomID(roomId));
                    } else {
                        JOptionPane.showMessageDialog(this, "Add failed!");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, valid);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Cannot add!");
        }
    }//GEN-LAST:event_btnAddEquipActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        try {
            txtEquipId.setEditable(true);
            // TODO add your handling code here:
            txtEquipId.setText("");
            txtEquipName.setText("");
            txtRoom.setText("");
            txtRoomDes.setText("");
            btngEquipStatus.clearSelection();

            firstController();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String equipId = txtEquipId.getText();
        String equipName = txtEquipName.getText();
        String roomId = txtRoom.getText();
        String roomDes = txtRoomDes.getText();
        boolean equipStatus = false;

        if (rbtnGood.isSelected()) {
            equipStatus = false;
        } else if (rbtnBroken.isSelected()) {
            equipStatus = true;
        }

        String valid = "";
        if (equipId.isBlank()) {
            valid += "Equipment ID can't be blank.\n";
        }

        if (equipName.isBlank()) {
            valid += "Equipment name can't be blank.\n";
        }

        if (!rbtnBroken.isSelected() && !rbtnGood.isSelected()) {
            valid += "Equipment status can't be unselected!\n";
        }

        if (roomId.isBlank()) {
            valid += "Room can't be blank.\n";
        }

        if (valid.isBlank()) {
            try {
                EquipmentDAO eDao = new EquipmentDAO();
                RoomDAO rDao = new RoomDAO();

                List<String> roomList = rDao.getRoomList(rDao.getAllRoom());

                if (roomList.contains(roomId)) {
                    if (eDao.updateEquip(equipId, equipName, equipStatus, roomId)
                            && rDao.updateRoom(roomId, roomDes)) {
                        JOptionPane.showMessageDialog(this, "Updated successfully!");

                        showRoom(rDao.getAllRoom());
                        showEquipment(eDao.findByRoomID(roomId));
                    } else {
                        JOptionPane.showMessageDialog(this, "Update failed!");
                    }

                } else {

                    if (rDao.addRoom(roomId, roomDes)
                            && eDao.updateEquip(equipId, equipName, equipStatus, roomId)) {
                        JOptionPane.showMessageDialog(this, "Updated successfully!");

                        showRoom(rDao.getAllRoom());
                        showEquipment(eDao.findByRoomID(roomId));
                    } else {
                        JOptionPane.showMessageDialog(this, "Update failed!");
                    }
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, valid);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblViewEquipMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewEquipMouseClicked

        try {
            // TODO add your handling code here:
            int row = tblViewEquip.getSelectedRow();
            String equipId = (String) tblViewEquip.getValueAt(row, 0);

            EquipmentDAO dao = new EquipmentDAO();
            EquipmentDTO dto = dao.findByPrimaryKeyAdminAndTeacher(equipId);
            RoomDAO rDao = new RoomDAO();
            String roomDes = rDao.getRoomDesByID(dto.getRoomID());

            txtEquipId.setText(dto.getEquipmentID());
            txtEquipName.setText(dto.getEquipmentName());
            txtRoom.setText(dto.getRoomID());
            txtRoomDes.setText(roomDes);

            if (dto.isEquipmentStatus()) {
                rbtnGood.setSelected(false);
                rbtnBroken.setSelected(true);
            } else {
                rbtnGood.setSelected(true);
                rbtnBroken.setSelected(false);
            }

            txtEquipId.setEditable(false);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_tblViewEquipMouseClicked

    private void tblViewRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewRoomMouseClicked
        // TODO add your handling code here:
        try {
            int row = tblViewRoom.getSelectedRow();
            String roomId = (String) tblModelRoom.getValueAt(row, 0);

            EquipmentDAO equipDao = new EquipmentDAO();
            List<EquipmentDTO> listEquip = equipDao.findByRoomID(roomId);
            showEquipment(listEquip);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_tblViewRoomMouseClicked

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        // TODO add your handling code here:
        String username = txtUsernameUser.getText();

        String valid = "";
        if (username.isBlank()) {
            valid += "Username can't be blank";
        }

        if (valid.isBlank()) {
            try {
                UserDAO dao = new UserDAO();
                if (dao.deleteUser(username)) {
                    JOptionPane.showMessageDialog(this, "Delete successfully");

                    thirdController();
                } else {
                    JOptionPane.showMessageDialog(this, "Delete failed");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                
            }
        } else {
            JOptionPane.showMessageDialog(this, valid);
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void tblViewUserJobMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewUserJobMouseClicked
        // TODO add your handling code here:
        try {
            int row = tblViewUserJob.getSelectedRow();
            String username = (String) tblModelUserJob.getValueAt(row, 1);
            String role = (String) tblModelUserJob.getValueAt(row, 0);

            txtUsernameJob.setText(username);
            if (role.equalsIgnoreCase("Student")) {
                txtJob.setText("Study");
            } else if (role.equalsIgnoreCase("Teacher")) {
                txtJob.setText("Teach");
            } else {
                txtJob.setText("");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_tblViewUserJobMouseClicked

    private void tblViewRoomJobMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewRoomJobMouseClicked
        // TODO add your handling code here:
        try {
            int row = tblViewRoomJob.getSelectedRow();
            String room = (String) tblModelRoomJob.getValueAt(row, 0);

            txtRoomJob.setText(room);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_tblViewRoomJobMouseClicked

    private void btnRefreshJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshJobActionPerformed
        // TODO add your handling code here:
        try {
            txtUsernameJob.setText("");
            txtJob.setText("");
            txtRoomJob.setText("");

            forthController();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnRefreshJobActionPerformed

    private void btnSearchByUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByUsernameActionPerformed
        // TODO add your handling code here:

        try {
            int row = tblViewUserJob.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Please select a row.");
            } else {
                String username = (String) tblModelUserJob.getValueAt(row, 1);

                RoomDAO roomDao = new RoomDAO();
                List<RoomDTO> roomList = roomDao.getRoomAdmin(username);
                tblModelRoomJob.setRowCount(0);
                for (RoomDTO roomDTO : roomList) {
                    tblModelRoomJob.addRow(roomDTO.toVectorEmployer());
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnSearchByUsernameActionPerformed

    private void btnSearchByRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByRoomActionPerformed
        // TODO add your handling code here:
        try {
            int row = tblViewRoomJob.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Please select a row.");
            } else {
                String room = (String) tblModelRoomJob.getValueAt(row, 0);

                UserDAO dao = new UserDAO();
                List<UserDTO> list = dao.getUserByRoom(room);

                Collections.sort(list);
                tblModelUserJob.setRowCount(0);
                for (UserDTO userDTO : list) {
                    tblModelUserJob.addRow(userDTO.toVector());
                }
            }

        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnSearchByRoomActionPerformed

    private void btnAddJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddJobActionPerformed
        // TODO add your handling code here:

        String username = txtUsernameJob.getText();
        String work = txtJob.getText();
        String room = txtRoomJob.getText();

        String valid = "";

        if (username.isBlank()) {
            valid += "Username cannot be blank.\n";
        }

        if (work.isBlank()) {
            valid += "Work cannot be blank.";
        }

        if (room.isBlank()) {
            valid += "Room cannot be blank.";
        }

        if (valid.isBlank()) {
            try {
                UserDAO dao = new UserDAO();
                if (dao.addJob(username, room, work)) {
                    JOptionPane.showMessageDialog(this, "Added successfully");

                    forthController();
                } else {
                    JOptionPane.showMessageDialog(this, "Add failed!");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, valid);
        }
    }//GEN-LAST:event_btnAddJobActionPerformed

    private void btnDeleteJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteJobActionPerformed
        // TODO add your handling code here:
        String username = txtUsernameJob.getText();
        String room = txtRoomJob.getText();

        String valid = "";

        if (username.isBlank()) {
            valid += "Username cannot be blank.\n";
        }

        if (room.isBlank()) {
            valid += "Room cannot be blank.";
        }

        if (valid.isBlank()) {
            try {
                UserDAO dao = new UserDAO();
                if (dao.deleteJob(username, room)) {
                    JOptionPane.showMessageDialog(this, "Deleted successfully");

                    forthController();
                } else {
                    JOptionPane.showMessageDialog(this, "Delete failed!");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, valid);
        }
    }//GEN-LAST:event_btnDeleteJobActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(EmployerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(EmployerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(EmployerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(EmployerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        FeedbackDAO feedbackDao = new FeedbackDAO();
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    new EmployerJFrame().setVisible(true);
//
//                } catch (Exception ex) {
//                    Logger.getLogger(EmployerJFrame.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//        feedbackDao.run();
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEquip;
    private javax.swing.JButton btnAddJob;
    private javax.swing.JButton btnAddRoom;
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClearField;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteJob;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRefreshJob;
    private javax.swing.JButton btnReply;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearchByRoom;
    private javax.swing.JButton btnSearchByUsername;
    private javax.swing.JButton btnShowAll;
    private javax.swing.JButton btnShowEmployer;
    private javax.swing.JButton btnShowStudent;
    private javax.swing.JButton btnShowTeacher;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.ButtonGroup btngEquipStatus;
    private javax.swing.ButtonGroup btngFeedbackStatus;
    private javax.swing.JComboBox<String> cbxRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblPopup;
    private javax.swing.JRadioButton rbtnAccept;
    private javax.swing.JRadioButton rbtnBroken;
    private javax.swing.JRadioButton rbtnDecline;
    private javax.swing.JRadioButton rbtnGood;
    private javax.swing.JTable tblViewEquip;
    private javax.swing.JTable tblViewFeedback;
    private javax.swing.JTable tblViewRoom;
    private javax.swing.JTable tblViewRoomJob;
    private javax.swing.JTable tblViewUser;
    private javax.swing.JTable tblViewUserJob;
    private javax.swing.JTextArea txtContent;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtEquipId;
    private javax.swing.JTextField txtEquipIdFb;
    private javax.swing.JTextField txtEquipName;
    private javax.swing.JTextField txtEquipNameFb;
    private javax.swing.JTextField txtIDFb;
    private javax.swing.JTextField txtJob;
    private javax.swing.JPasswordField txtPasswordUser;
    private javax.swing.JTextArea txtReply;
    private javax.swing.JTextField txtRoleFb;
    private javax.swing.JTextField txtRoom;
    private javax.swing.JTextArea txtRoomDes;
    private javax.swing.JTextField txtRoomIdfb;
    private javax.swing.JTextField txtRoomJob;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtUsernameJob;
    private javax.swing.JTextField txtUsernameUser;
    // End of variables declaration//GEN-END:variables
}
